# Generated by Django 5.2 on 2025-04-06 17:23

import django.contrib.postgres.fields
import django.db.models.deletion
import django.db.models.functions.text
import django_countries.fields
import gregory.models
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('gregory', '0032_articles_takeaways'),
        ('organizations', '0006_alter_organization_slug'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='trials',
            name='categories',
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('organizations.organization',),
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('organizations.organizationuser',),
        ),
        migrations.AlterModelOptions(
            name='articles',
            options={'managed': True, 'ordering': ['-discovery_date'], 'verbose_name_plural': 'articles'},
        ),
        migrations.AlterModelOptions(
            name='subject',
            options={'managed': True, 'verbose_name_plural': 'subjects'},
        ),
        migrations.AlterUniqueTogether(
            name='articles',
            unique_together={('title', 'link')},
        ),
        migrations.RemoveField(
            model_name='trials',
            name='sent',
        ),
        migrations.RemoveField(
            model_name='trials',
            name='sent_real_time_notification',
        ),
        migrations.RemoveField(
            model_name='trials',
            name='sent_to_admin',
        ),
        migrations.RemoveField(
            model_name='trials',
            name='sent_to_subscribers',
        ),
        migrations.RemoveField(
            model_name='trials',
            name='source',
        ),
        migrations.AddField(
            model_name='articles',
            name='retracted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='articles',
            name='sources',
            field=models.ManyToManyField(blank=True, to='gregory.sources'),
        ),
        migrations.AddField(
            model_name='articles',
            name='subjects',
            field=models.ManyToManyField(related_name='articles', to='gregory.subject'),
        ),
        migrations.AddField(
            model_name='articles',
            name='summary_plain_english',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='authors',
            name='country',
            field=django_countries.fields.CountryField(blank=True, max_length=2, null=True),
        ),
        migrations.AddField(
            model_name='authors',
            name='orcid_check',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='sources',
            name='active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='sources',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='condition',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='contact_address',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='contact_affiliation',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='contact_email',
            field=models.EmailField(blank=True, max_length=2000, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='contact_firstname',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='contact_lastname',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='contact_tel',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='countries',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='countries_decision_date',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='country_status',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='date_enrollement',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='date_registration',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='ethics_review_approval_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='ethics_review_contact_address',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='ethics_review_contact_email',
            field=models.EmailField(blank=True, max_length=1000, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='ethics_review_contact_name',
            field=models.EmailField(blank=True, max_length=1000, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='ethics_review_contact_phone',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='ethics_review_status',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='exclusion_criteria',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='export_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='identifiers',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='inclusion_agemax',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='inclusion_agemin',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='inclusion_criteria',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='inclusion_gender',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='internal_number',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='intervention',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='last_refreshed_on',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='last_updated',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='other_records',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='overall_decision_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='phase',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='primary_outcome',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='primary_sponsor',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='recruitment_status',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='results_date_completed',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='results_posted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='trials',
            name='results_url_link',
            field=models.URLField(blank=True, max_length=2000, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='retrospective_flag',
            field=models.CharField(blank=True, max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='scientific_title',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='secondary_id',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='secondary_outcome',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='source_register',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='source_support',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='sources',
            field=models.ManyToManyField(blank=True, to='gregory.sources'),
        ),
        migrations.AddField(
            model_name='trials',
            name='sponsor_type',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='study_design',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='study_type',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='subjects',
            field=models.ManyToManyField(related_name='trials', to='gregory.subject'),
        ),
        migrations.AddField(
            model_name='trials',
            name='summary_plain_english',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='target_size',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='therapeutic_areas',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='trials',
            name='trial_region',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='authors',
            name='ORCID',
            field=models.CharField(blank=True, max_length=150, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='sources',
            name='language',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='sources',
            name='method',
            field=models.CharField(choices=[('rss', 'RSS'), ('scrape', 'Scrape'), ('manual', 'Manual submission')], default='rss', max_length=10),
        ),
        migrations.AlterModelTable(
            name='subject',
            table='subjects',
        ),
        migrations.CreateModel(
            name='ArticleSubjectRelevance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_relevant', models.BooleanField(default=False, help_text='Indicates if the article is relevant for the subject.')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_subject_relevances', to='gregory.articles')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gregory.subject')),
            ],
            options={
                'verbose_name_plural': 'article subject relevances',
            },
        ),
        migrations.CreateModel(
            name='HistoricalArticles',
            fields=[
                ('article_id', models.IntegerField(blank=True, db_index=True)),
                ('title', models.TextField(db_index=True)),
                ('link', models.URLField(max_length=2000)),
                ('doi', models.CharField(blank=True, max_length=280, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('summary_plain_english', models.TextField(blank=True, null=True)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('discovery_date', models.DateTimeField(blank=True, editable=False)),
                ('relevant', models.BooleanField(blank=True, null=True)),
                ('noun_phrases', models.JSONField(blank=True, null=True)),
                ('sent_to_subscribers', models.BooleanField(blank=True, null=True)),
                ('kind', models.CharField(choices=[('science paper', 'Science Paper'), ('news article', 'News Article')], default='science paper', max_length=50)),
                ('access', models.CharField(choices=[('unknown', 'Unknown'), ('open', 'Open'), ('restricted', 'Restricted')], default=None, max_length=50, null=True)),
                ('publisher', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('container_title', models.CharField(blank=True, default=None, max_length=150, null=True)),
                ('crossref_check', models.DateTimeField(blank=True, null=True)),
                ('takeaways', models.TextField(blank=True, null=True)),
                ('retracted', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical articles',
                'verbose_name_plural': 'historical articles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAuthors',
            fields=[
                ('author_id', models.IntegerField(blank=True, db_index=True)),
                ('family_name', models.CharField(max_length=150)),
                ('given_name', models.CharField(max_length=150)),
                ('ORCID', models.CharField(blank=True, db_index=True, max_length=150, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('orcid_check', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical authors',
                'verbose_name_plural': 'historical authors',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTrials',
            fields=[
                ('trial_id', models.IntegerField(blank=True, db_index=True)),
                ('discovery_date', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, editable=False, null=True)),
                ('title', models.TextField(db_index=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('summary_plain_english', models.TextField(blank=True, null=True)),
                ('link', models.URLField(max_length=2000)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('relevant', models.BooleanField(blank=True, null=True)),
                ('identifiers', models.JSONField(blank=True, null=True)),
                ('export_date', models.DateTimeField(blank=True, null=True)),
                ('internal_number', models.CharField(blank=True, max_length=100, null=True)),
                ('last_refreshed_on', models.DateField(blank=True, null=True)),
                ('scientific_title', models.TextField(blank=True, null=True)),
                ('primary_sponsor', models.TextField(blank=True, null=True)),
                ('retrospective_flag', models.CharField(blank=True, max_length=10, null=True)),
                ('date_registration', models.DateField(blank=True, null=True)),
                ('source_register', models.CharField(blank=True, max_length=200, null=True)),
                ('recruitment_status', models.CharField(blank=True, max_length=200, null=True)),
                ('inclusion_agemin', models.CharField(blank=True, max_length=100, null=True)),
                ('inclusion_agemax', models.CharField(blank=True, max_length=100, null=True)),
                ('inclusion_gender', models.CharField(blank=True, max_length=500, null=True)),
                ('date_enrollement', models.DateField(blank=True, null=True)),
                ('target_size', models.TextField(blank=True, null=True)),
                ('study_type', models.TextField(blank=True, null=True)),
                ('study_design', models.TextField(blank=True, null=True)),
                ('phase', models.TextField(blank=True, null=True)),
                ('countries', models.TextField(blank=True, null=True)),
                ('contact_firstname', models.TextField(blank=True, null=True)),
                ('contact_lastname', models.TextField(blank=True, null=True)),
                ('contact_address', models.TextField(blank=True, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=2000, null=True)),
                ('contact_tel', models.TextField(blank=True, null=True)),
                ('contact_affiliation', models.TextField(blank=True, null=True)),
                ('inclusion_criteria', models.TextField(blank=True, null=True)),
                ('exclusion_criteria', models.TextField(blank=True, null=True)),
                ('condition', models.TextField(blank=True, null=True)),
                ('intervention', models.TextField(blank=True, null=True)),
                ('primary_outcome', models.TextField(blank=True, null=True)),
                ('secondary_outcome', models.TextField(blank=True, null=True)),
                ('secondary_id', models.TextField(blank=True, null=True)),
                ('source_support', models.TextField(blank=True, null=True)),
                ('ethics_review_status', models.TextField(blank=True, null=True)),
                ('ethics_review_approval_date', models.DateField(blank=True, null=True)),
                ('ethics_review_contact_name', models.EmailField(blank=True, max_length=1000, null=True)),
                ('ethics_review_contact_address', models.TextField(blank=True, null=True)),
                ('ethics_review_contact_phone', models.TextField(blank=True, null=True)),
                ('ethics_review_contact_email', models.EmailField(blank=True, max_length=1000, null=True)),
                ('results_date_completed', models.DateField(blank=True, null=True)),
                ('results_url_link', models.URLField(blank=True, max_length=2000, null=True)),
                ('therapeutic_areas', models.TextField(blank=True, null=True)),
                ('country_status', models.TextField(blank=True, null=True)),
                ('trial_region', models.CharField(blank=True, max_length=500, null=True)),
                ('results_posted', models.BooleanField(default=False)),
                ('overall_decision_date', models.DateField(blank=True, null=True)),
                ('countries_decision_date', models.JSONField(blank=True, null=True)),
                ('sponsor_type', models.CharField(blank=True, max_length=500, null=True)),
                ('other_records', models.CharField(blank=True, max_length=200, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical trials',
                'verbose_name_plural': 'historical trials',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='MLPredictions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('gnb', models.BooleanField(blank=True, help_text='Indicates the Machine Learning prediction made using Gaussian Naive Bayes.', null=True, verbose_name='Gaussian Naive Bayes Prediction')),
                ('lr', models.BooleanField(blank=True, help_text='Indicates the Machine Learning prediction made using Logistic Regression.', null=True, verbose_name='Logistic Regression Prediction')),
                ('lsvc', models.BooleanField(blank=True, help_text='Indicates the Machine Learning prediction made using Linear Support Vector Classification.', null=True, verbose_name='Linear Support Vector Classification Prediction')),
                ('mnb', models.BooleanField(blank=True, help_text='indicates the Machine Learning prediction using Multinomial Naive Bayes.', null=True, verbose_name='Multinomial Naive Bayes')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ml_subject_predictions', to='gregory.subject')),
            ],
        ),
        migrations.AddField(
            model_name='articles',
            name='ml_predictions',
            field=models.ManyToManyField(blank=True, to='gregory.mlpredictions'),
        ),
        migrations.AddField(
            model_name='trials',
            name='ml_predictions',
            field=models.ManyToManyField(blank=True, to='gregory.mlpredictions'),
        ),
        migrations.CreateModel(
            name='TeamCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=200)),
                ('category_description', models.TextField(blank=True, null=True)),
                ('category_slug', models.SlugField(blank=True, null=True, unique=True)),
                ('category_terms', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), default=list, help_text='Add terms separated by commas.', size=None, verbose_name='Terms to include in category (comma separated)')),
                ('subjects', models.ManyToManyField(blank=True, related_name='team_subjects', to='gregory.subject')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_categories', to='gregory.team')),
            ],
            options={
                'verbose_name_plural': 'team categories',
                'db_table': 'team_categories',
            },
        ),
        migrations.AddField(
            model_name='articles',
            name='team_categories',
            field=models.ManyToManyField(blank=True, related_name='articles', to='gregory.teamcategory'),
        ),
        migrations.AddField(
            model_name='trials',
            name='team_categories',
            field=models.ManyToManyField(related_name='trials', to='gregory.teamcategory'),
        ),
        migrations.CreateModel(
            name='TeamCredentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postmark_api_token', gregory.models.EncryptedTextField(blank=True, help_text='Postmark API Token for this team.', null=True)),
                ('postmark_api_url', models.URLField(blank=True, help_text='Postmark API URL for this team.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('team', models.OneToOneField(help_text='The team associated with these credentials.', on_delete=django.db.models.deletion.CASCADE, related_name='credentials', to='gregory.team')),
            ],
            options={
                'verbose_name': 'Team Credential',
                'verbose_name_plural': 'Team Credentials',
            },
        ),
        migrations.AddField(
            model_name='articles',
            name='teams',
            field=models.ManyToManyField(related_name='articles', to='gregory.team'),
        ),
        migrations.AddField(
            model_name='sources',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sources', to='gregory.team'),
        ),
        migrations.AddField(
            model_name='subject',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='gregory.team'),
        ),
        migrations.AddField(
            model_name='trials',
            name='teams',
            field=models.ManyToManyField(related_name='trials', to='gregory.team'),
        ),
        migrations.AddConstraint(
            model_name='trials',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('title'), name='unique_title_case_insensitive'),
        ),
        migrations.RemoveField(
            model_name='articles',
            name='categories',
        ),
        migrations.RemoveField(
            model_name='articles',
            name='ml_prediction_gnb',
        ),
        migrations.RemoveField(
            model_name='articles',
            name='ml_prediction_lr',
        ),
        migrations.RemoveField(
            model_name='articles',
            name='sent_to_admin',
        ),
        migrations.RemoveField(
            model_name='articles',
            name='source',
        ),
        migrations.AlterUniqueTogether(
            name='articlesubjectrelevance',
            unique_together={('article', 'subject')},
        ),
        migrations.AlterUniqueTogether(
            name='teamcategory',
            unique_together={('team', 'category_slug')},
        ),
        migrations.DeleteModel(
            name='Categories',
        ),
    ]
