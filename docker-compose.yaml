services:
  db:
    image: postgres:15
    restart: always
    container_name: db
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - gregory_network

  gregory:
    container_name: gregory
    restart: always
    image: gregory-ai:latest
    # build: 
    #   context: django/
    #   dockerfile: Dockerfile
    # used for local development
    command: python manage.py runserver 0.0.0.0:8000
    # command: gunicorn --workers 4 --threads 2 --log-level debug -b 0.0.0.0:8000 admin.wsgi
    volumes:
      - ./django:/code
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DOMAIN_NAME=${DOMAIN_NAME}
      - EMAIL_DOMAIN=${EMAIL_DOMAIN}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_MAILGUN_API_URL=${EMAIL_MAILGUN_API_URL}
      - EMAIL_MAILGUN_API=${EMAIL_MAILGUN_API}
      - EMAIL_POSTMARK_API_URL=${EMAIL_POSTMARK_API_URL}
      - EMAIL_POSTMARK_API=${EMAIL_POSTMARK_API}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - ORCID_ClientID=${ORCID_ClientID}
      - ORCID_ClientSecret=${ORCID_ClientSecret}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - SECRET_KEY=${SECRET_KEY}
      - FERNET_SECRET_KEY=${FERNET_SECRET_KEY}

    networks:
      - gregory_network
    depends_on:
      - db

networks:
  gregory_network:
    external: false
    name: gregory_network
  default:
    driver: bridge
